{
  "version": 3,
  "sources": ["../main.ts"],
  "sourcesContent": ["const GRID_LIMIT = 150;\nconst GRID_ROWS = 10;\nconst GRID_COLUMNS = Math.ceil(GRID_LIMIT / GRID_ROWS);\nconst MAX_TABLE = 20;\nconst EXTRA_HOLD = 260; // keep the ball resting briefly on each cell\nconst DEFAULT_VOLUME_PERCENT = 60;\n\ntype TableStep = {\n  multiplier: number;\n  product: number;\n};\n\ntype Palette = {\n  runColor: string;\n  runShadow: string;\n  runShadowStrong: string;\n  ballLight: string;\n  ballBorder: string;\n  ballGlow: string;\n};\n\nlet runToken = 0;\nlet activeCell: HTMLElement | null = null;\n\nconst board = document.getElementById('board') as HTMLDivElement | null;\nconst ball = document.getElementById('ball') as HTMLDivElement | null;\nconst select = document.getElementById('table-select') as HTMLSelectElement | null;\nconst startButton = document.getElementById('start-button') as HTMLButtonElement | null;\nconst stopButton = document.getElementById('stop-button') as HTMLButtonElement | null;\nconst speedSlider = document.getElementById('speed-slider') as HTMLInputElement | null;\nconst speedLabel = document.getElementById('speed-label') as HTMLSpanElement | null;\nconst productDisplay = document.getElementById('product-display') as HTMLSpanElement | null;\nconst volumeSlider = document.getElementById('volume-slider') as HTMLInputElement | null;\nconst volumeLabel = document.getElementById('volume-label') as HTMLSpanElement | null;\nconst backgroundAudio = document.getElementById('background-audio') as HTMLAudioElement | null;\n\nif (\n  !board ||\n  !ball ||\n  !select ||\n  !startButton ||\n  !stopButton ||\n  !speedSlider ||\n  !speedLabel ||\n  !productDisplay ||\n  !volumeSlider ||\n  !volumeLabel ||\n  !backgroundAudio\n) {\n  throw new Error('Expected application elements were not found in the DOM.');\n}\n\nconst cellsByValue = new Map<number, HTMLElement>();\nconst visitedCells = new Set<HTMLElement>();\nconst paletteByTable = new Map<number, Palette>();\n\nfunction clearVisited(): void {\n  visitedCells.forEach((cell) => {\n    cell.classList.remove('visited');\n    cell.classList.remove('active');\n  });\n  visitedCells.clear();\n  activeCell = null;\n  resetProductDisplay();\n}\n\nfunction createPalette(): Palette {\n  const hue = Math.floor(Math.random() * 360);\n\n  return {\n    runColor: `hsla(${hue}, 85%, 68%, 0.95)`,\n    runShadow: `hsla(${hue}, 80%, 35%, 0.35)`,\n    runShadowStrong: `hsla(${hue}, 82%, 32%, 0.45)`,\n    ballLight: `hsla(${hue}, 95%, 88%, 0.85)`,\n    ballBorder: `hsla(${hue}, 85%, 65%, 0.6)`,\n    ballGlow: `hsla(${hue}, 85%, 52%, 0.4)`,\n  };\n}\n\nfunction applyPalette(palette: Palette): void {\n  board.style.setProperty('--run-color', palette.runColor);\n  board.style.setProperty('--run-color-shadow', palette.runShadow);\n  board.style.setProperty('--run-color-shadow-strong', palette.runShadowStrong);\n  board.style.setProperty('--ball-color-light', palette.ballLight);\n  board.style.setProperty('--ball-border-color', palette.ballBorder);\n  board.style.setProperty('--ball-glow', palette.ballGlow);\n}\n\nfunction getPaletteFor(base: number): Palette {\n  let palette = paletteByTable.get(base) ?? null;\n  if (!palette) {\n    palette = createPalette();\n    paletteByTable.set(base, palette);\n  }\n  applyPalette(palette);\n  return palette;\n}\n\nfunction stopMusic(): void {\n  backgroundAudio.pause();\n  backgroundAudio.currentTime = 0;\n}\n\nasync function startMusic(): Promise<void> {\n  backgroundAudio.pause();\n  backgroundAudio.currentTime = 0;\n  backgroundAudio.load();\n  applyVolume();\n  try {\n    await backgroundAudio.play();\n  } catch (error) {\n    console.warn('Background audio play request was blocked or failed:', error);\n  }\n}\n\nfunction applyVolume(): void {\n  const level = currentVolume();\n  const shaped = Math.pow(level, 0.8);\n  const musicVolume = level <= 0.01 ? 0 : 0.15 + shaped * 0.75;\n  backgroundAudio.volume = Math.max(0, Math.min(1, musicVolume));\n}\n\nfunction currentVolume(): number {\n  const value = Number(volumeSlider.value);\n  if (!Number.isFinite(value)) {\n    return DEFAULT_VOLUME_PERCENT / 100;\n  }\n  return Math.max(0, Math.min(1, value / 100));\n}\n\nfunction resetProductDisplay(): void {\n  productDisplay.textContent = '';\n}\n\nfunction updateProductDisplay(base: number, multiplier: number, product: number): void {\n  productDisplay.textContent = `${base} x ${multiplier} = ${product}`;\n}\n\nfunction initialiseSelect(): void {\n  // Ensure options run from 1 up to MAX_TABLE; skip duplicates that might exist already.\n  const existing = new Set<string>();\n  Array.from(select.options).forEach((option) => {\n    existing.add(option.value);\n  });\n\n  for (let value = 1; value <= MAX_TABLE; value += 1) {\n    if (!existing.has(String(value))) {\n      const option = document.createElement('option');\n      option.value = String(value);\n      option.textContent = String(value);\n      select.append(option);\n    }\n  }\n}\n\nfunction buildBoard(): void {\n  board.innerHTML = ''; // clear any previous render\n  cellsByValue.clear();\n  clearVisited();\n  board.style.setProperty('--grid-columns', String(GRID_COLUMNS));\n  board.style.setProperty('--grid-rows', String(GRID_ROWS));\n  const fragment = document.createDocumentFragment();\n\n  for (let value = 1; value <= GRID_LIMIT; value += 1) {\n    const cell = document.createElement('div');\n    cell.className = 'cell';\n    cell.dataset.value = String(value);\n    cell.textContent = String(value);\n    fragment.append(cell);\n    cellsByValue.set(value, cell);\n  }\n\n  fragment.append(ball);\n  board.append(fragment);\n}\n\nfunction updateSpeedLabel(): void {\n  const durationMs = Number(speedSlider.value);\n  const seconds = (durationMs / 1000).toFixed(1);\n  speedLabel.textContent = `${seconds}s`;\n}\n\nfunction currentHopDuration(): number {\n  return Number(speedSlider.value);\n}\n\nfunction updateVolumeLabel(): void {\n  const percent = Math.round(currentVolume() * 100);\n  volumeLabel.textContent = `${percent}%`;\n  applyVolume();\n}\n\nfunction setRunningState(running: boolean): void {\n  startButton.disabled = running;\n  stopButton.disabled = !running;\n}\n\nfunction setActiveCell(cell: HTMLElement | null): void {\n  if (activeCell && activeCell !== cell) {\n    activeCell.classList.remove('active');\n  }\n\n  if (!cell) {\n    activeCell = null;\n    resetProductDisplay();\n    return;\n  }\n\n  activeCell = cell;\n  activeCell.classList.add('visited');\n  activeCell.classList.add('active');\n  visitedCells.add(activeCell);\n}\n\nfunction positionBall(cell: HTMLElement | null, animate = true): void {\n  if (!cell) {\n    ball.classList.remove('visible');\n    return;\n  }\n\n  const duration = animate ? currentHopDuration() : 0;\n  ball.style.setProperty('--hop-duration', `${duration}ms`);\n\n  const width = cell.offsetWidth;\n  const height = cell.offsetHeight;\n  ball.style.width = `${width}px`;\n  ball.style.height = `${height}px`;\n\n  const targetX = cell.offsetLeft;\n  const targetY = cell.offsetTop;\n  ball.classList.add('visible');\n  ball.style.transform = `translate3d(${targetX}px, ${targetY}px, 0)`;\n\n  if (!animate) {\n    // Allow transition duration to reset on the next frame.\n    requestAnimationFrame(() => {\n      ball.style.setProperty('--hop-duration', `${currentHopDuration()}ms`);\n    });\n  }\n}\n\nfunction speak(base: number, multiplier: number, product: number): void {\n  if (!('speechSynthesis' in window)) {\n    return;\n  }\n\n  const quickHop = currentHopDuration() < 1500;\n  const message = quickHop ? `${product}` : `${base} times ${multiplier} is ${product}`;\n  const utterance = new SpeechSynthesisUtterance(message);\n  utterance.lang = 'en-US';\n  utterance.rate = quickHop ? 1.05 : 0.95;\n  utterance.pitch = 1.05;\n  utterance.volume = Math.max(0, Math.min(1, currentVolume()));\n\n  window.speechSynthesis.cancel();\n  window.speechSynthesis.speak(utterance);\n}\n\nfunction buildSteps(base: number): TableStep[] {\n  const steps: TableStep[] = [];\n  for (let multiplier = 1; multiplier <= 12; multiplier += 1) {\n    const product = base * multiplier;\n    if (product > GRID_LIMIT) {\n      break;\n    }\n    steps.push({ multiplier, product });\n  }\n  return steps;\n}\n\nfunction wait(ms: number): Promise<void> {\n  return new Promise((resolve) => {\n    window.setTimeout(resolve, ms);\n  });\n}\n\nfunction cleanup(aborted: boolean): void {\n  setRunningState(false);\n  stopMusic();\n  setActiveCell(null);\n  if (aborted) {\n    ball.classList.remove('visible');\n    window.speechSynthesis?.cancel?.();\n  }\n}\n\nasync function playTable(base: number, token: number): Promise<void> {\n  const steps = buildSteps(base);\n  setActiveCell(null);\n  positionBall(null);\n  await wait(150); // brief pause before starting\n\n  for (const step of steps) {\n    if (token !== runToken) {\n      return;\n    }\n\n    const cell = cellsByValue.get(step.product) ?? null;\n    if (!cell) {\n      continue;\n    }\n\n    setActiveCell(cell);\n    updateProductDisplay(base, step.multiplier, step.product);\n    positionBall(cell);\n    speak(base, step.multiplier, step.product);\n\n    const dwell = currentHopDuration() + EXTRA_HOLD;\n    await wait(dwell);\n  }\n\n  if (token === runToken) {\n    cleanup(false);\n  }\n}\n\nfunction handleStart(): void {\n  const selected = Number(select.value);\n  if (!Number.isFinite(selected) || selected < 1) {\n    return;\n  }\n\n  clearVisited();\n  positionBall(null);\n  getPaletteFor(selected);\n  void startMusic();\n\n  runToken += 1;\n  const token = runToken;\n\n  setRunningState(true);\n  window.speechSynthesis?.cancel?.();\n\n  void playTable(selected, token).catch((error) => {\n    console.error(error);\n    cleanup(true);\n  });\n}\n\nfunction handleStop(): void {\n  runToken += 1;\n  cleanup(true);\n}\n\nfunction handleSliderInput(): void {\n  updateSpeedLabel();\n  if (activeCell) {\n    positionBall(activeCell, false);\n  }\n}\n\nfunction handleVolumeInput(): void {\n  updateVolumeLabel();\n}\n\nfunction handleResize(): void {\n  if (activeCell) {\n    positionBall(activeCell, false);\n  }\n}\n\nfunction init(): void {\n  initialiseSelect();\n  buildBoard();\n  updateSpeedLabel();\n  updateVolumeLabel();\n  setRunningState(false);\n\n  startButton.addEventListener('click', handleStart);\n  stopButton.addEventListener('click', handleStop);\n  speedSlider.addEventListener('input', handleSliderInput);\n  volumeSlider.addEventListener('input', handleVolumeInput);\n  window.addEventListener('resize', handleResize);\n}\n\ninit();\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', () => {\n    navigator.serviceWorker\n      .register('./sw.js')\n      .catch((error) => console.error('Service worker registration failed:', error));\n  });\n}\n"],
  "mappings": "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",
  "names": ["GRID_COLUMNS", "MAX_TABLE", "EXTRA_HOLD", "DEFAULT_VOLUME_PERCENT", "runToken", "activeCell", "board", "ball", "select", "startButton", "stopButton", "speedSlider", "speedLabel", "productDisplay", "volumeSlider", "volumeLabel", "backgroundAudio", "cellsByValue", "visitedCells", "paletteByTable", "clearVisited", "cell", "resetProductDisplay", "createPalette", "hue", "applyPalette", "palette", "getPaletteFor", "base", "_a", "stopMusic", "startMusic", "applyVolume", "error", "level", "currentVolume", "shaped", "musicVolume", "value", "updateProductDisplay", "multiplier", "product", "initialiseSelect", "existing", "option", "buildBoard", "fragment", "updateSpeedLabel", "seconds", "currentHopDuration", "updateVolumeLabel", "percent", "setRunningState", "running", "setActiveCell", "positionBall", "animate", "duration", "width", "height", "targetX", "targetY", "speak", "quickHop", "message", "utterance", "buildSteps", "steps", "wait", "ms", "resolve", "cleanup", "aborted", "_b", "playTable", "token", "step", "dwell", "handleStart", "selected", "handleStop", "handleSliderInput", "handleVolumeInput", "handleResize", "init"]
}
