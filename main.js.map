{
  "version": 3,
  "sources": ["../main.ts"],
  "sourcesContent": ["const GRID_LIMIT = 150;\nconst GRID_ROWS = 10;\nconst GRID_COLUMNS = Math.ceil(GRID_LIMIT / GRID_ROWS);\nconst MAX_TABLE = 20;\nconst EXTRA_HOLD = 260; // keep the ball resting briefly on each cell\nconst DEFAULT_VOLUME_PERCENT = 60;\n\ntype TableStep = {\n  multiplier: number;\n  product: number;\n};\n\ntype Palette = {\n  runColor: string;\n  runShadow: string;\n  runShadowStrong: string;\n  ballLight: string;\n  ballBorder: string;\n  ballGlow: string;\n};\n\nconst enum Mode {\n  TimesTable = 'times',\n  Addition = 'addition',\n  Subtraction = 'subtraction',\n}\n\ntype ArithmeticQuestion = {\n  mode: Mode.Addition | Mode.Subtraction;\n  a: number;\n  b: number;\n  answer: number;\n  symbol: string;\n};\n\nlet runToken = 0;\nlet activeCell: HTMLElement | null = null;\nlet currentMode: Mode = Mode.TimesTable;\nlet currentQuestion: ArithmeticQuestion | null = null;\n\nconst board = document.getElementById('board') as HTMLDivElement | null;\nconst ball = document.getElementById('ball') as HTMLDivElement | null;\nconst select = document.getElementById('table-select') as HTMLSelectElement | null;\nconst startButton = document.getElementById('start-button') as HTMLButtonElement | null;\nconst stopButton = document.getElementById('stop-button') as HTMLButtonElement | null;\nconst speedSlider = document.getElementById('speed-slider') as HTMLInputElement | null;\nconst speedLabel = document.getElementById('speed-label') as HTMLSpanElement | null;\nconst productDisplay = document.getElementById('product-display') as HTMLSpanElement | null;\nconst volumeSlider = document.getElementById('volume-slider') as HTMLInputElement | null;\nconst volumeLabel = document.getElementById('volume-label') as HTMLSpanElement | null;\nconst backgroundAudio = document.getElementById('background-audio') as HTMLAudioElement | null;\nconst answerInput = document.getElementById('answer-input') as HTMLInputElement | null;\nconst checkButton = document.getElementById('check-button') as HTMLButtonElement | null;\nconst nextQuestionButton = document.getElementById('next-question') as HTMLButtonElement | null;\nconst sidebar = document.querySelector('.sidebar') as HTMLDivElement | null;\nconst sidebarToggle = document.getElementById('sidebar-toggle') as HTMLButtonElement | null;\nconst modeButtons = Array.from(document.querySelectorAll<HTMLButtonElement>('[data-mode-target]'));\nconst heading = document.querySelector('main.app > h1') as HTMLHeadingElement | null;\nconst hint = document.querySelector('.hint') as HTMLParagraphElement | null;\nconst pathOverlay = document.getElementById('path-overlay') as SVGSVGElement | null;\n\nif (\n  !board ||\n  !ball ||\n  !select ||\n  !startButton ||\n  !stopButton ||\n  !speedSlider ||\n  !speedLabel ||\n  !productDisplay ||\n  !volumeSlider ||\n  !volumeLabel ||\n  !backgroundAudio ||\n  !answerInput ||\n  !checkButton ||\n  !nextQuestionButton ||\n  !sidebar ||\n  !sidebarToggle ||\n  modeButtons.length === 0 ||\n  !heading ||\n  !hint ||\n  !pathOverlay\n) {\n  throw new Error('Expected application elements were not found in the DOM.');\n}\n\nconst cellsByValue = new Map<number, HTMLElement>();\nconst visitedCells = new Set<HTMLElement>();\nconst paletteByTable = new Map<number, Palette>();\nlet resumeAudioHandler: (() => void) | null = null;\nlet lastHopGroup: SVGGElement | null = null;\n\nfunction clearHopPaths(): void {\n  if (!pathOverlay) {\n    return;\n  }\n  pathOverlay.innerHTML = '';\n  lastHopGroup = null;\n}\n\nfunction clearVisited(resetDisplay: boolean = currentMode === Mode.TimesTable): void {\n  visitedCells.forEach((cell) => {\n    cell.classList.remove('visited');\n    cell.classList.remove('active');\n  });\n  visitedCells.clear();\n  activeCell = null;\n  if (resetDisplay) {\n    resetProductDisplay();\n  }\n  clearHopPaths();\n}\n\nfunction createPalette(): Palette {\n  const hue = Math.floor(Math.random() * 360);\n\n  return {\n    runColor: `hsla(${hue}, 85%, 68%, 0.95)`,\n    runShadow: `hsla(${hue}, 80%, 35%, 0.35)`,\n    runShadowStrong: `hsla(${hue}, 82%, 32%, 0.45)`,\n    ballLight: `hsla(${hue}, 95%, 88%, 0.85)`,\n    ballBorder: `hsla(${hue}, 85%, 65%, 0.6)`,\n    ballGlow: `hsla(${hue}, 85%, 52%, 0.4)`,\n  };\n}\n\nfunction applyPalette(palette: Palette): void {\n  board.style.setProperty('--run-color', palette.runColor);\n  board.style.setProperty('--run-color-shadow', palette.runShadow);\n  board.style.setProperty('--run-color-shadow-strong', palette.runShadowStrong);\n  board.style.setProperty('--ball-color-light', palette.ballLight);\n  board.style.setProperty('--ball-border-color', palette.ballBorder);\n  board.style.setProperty('--ball-glow', palette.ballGlow);\n}\n\nfunction getPaletteFor(base: number): Palette {\n  let palette = paletteByTable.get(base) ?? null;\n  if (!palette) {\n    palette = createPalette();\n    paletteByTable.set(base, palette);\n  }\n  applyPalette(palette);\n  return palette;\n}\n\nfunction stopMusic(): void {\n  backgroundAudio.pause();\n  backgroundAudio.currentTime = 0;\n}\n\nasync function startMusic(): Promise<void> {\n  backgroundAudio.pause();\n  backgroundAudio.currentTime = 0;\n  backgroundAudio.load();\n  applyVolume();\n  try {\n    await backgroundAudio.play();\n  } catch (error) {\n    console.warn('Background audio play request was blocked or failed:', error);\n    scheduleAudioResume();\n  }\n}\n\nfunction scheduleAudioResume(): void {\n  if (resumeAudioHandler) {\n    return;\n  }\n  const attempt = (): void => {\n    backgroundAudio\n      .play()\n      .catch((err) => {\n        console.warn('Retrying background audio play failed:', err);\n        scheduleAudioResume();\n      });\n    document.removeEventListener('pointerup', attempt);\n    document.removeEventListener('keydown', attempt);\n    document.removeEventListener('touchend', attempt);\n    resumeAudioHandler = null;\n  };\n  resumeAudioHandler = attempt;\n  document.addEventListener('pointerup', attempt, { once: true, passive: true });\n  document.addEventListener('touchend', attempt, { once: true, passive: true });\n  document.addEventListener('keydown', attempt, { once: true });\n}\n\nfunction applyVolume(): void {\n  const level = currentVolume();\n  const shaped = Math.pow(level, 0.8);\n  const musicVolume = level <= 0.01 ? 0 : 0.15 + shaped * 0.75;\n  backgroundAudio.volume = Math.max(0, Math.min(1, musicVolume));\n}\n\nfunction currentVolume(): number {\n  const value = Number(volumeSlider.value);\n  if (!Number.isFinite(value)) {\n    return DEFAULT_VOLUME_PERCENT / 100;\n  }\n  return Math.max(0, Math.min(1, value / 100));\n}\n\nfunction randomInt(min: number, max: number): number {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nfunction generateArithmeticQuestion(mode: Mode.Addition | Mode.Subtraction): ArithmeticQuestion {\n  if (mode === Mode.Addition) {\n    while (true) {\n      const a = randomInt(1, 99);\n      const b = randomInt(1, 99);\n      const answer = a + b;\n      if (answer <= GRID_LIMIT) {\n        return { mode, a, b, answer, symbol: '+' };\n      }\n    }\n  }\n\n  while (true) {\n    const a = randomInt(10, 99);\n    const b = randomInt(1, a - 1);\n    const answer = a - b;\n    if (answer >= 1) {\n      return { mode, a, b, answer, symbol: '\u2212' };\n    }\n  }\n}\n\nfunction updateQuestionDisplay(question: ArithmeticQuestion): void {\n  productDisplay.textContent = `${question.a} ${question.symbol} ${question.b} = ?`;\n}\n\nfunction displayCheckResult(question: ArithmeticQuestion, correct: boolean): void {\n  const text = `${question.a} ${question.symbol} ${question.b} = ${question.answer}`;\n  productDisplay.textContent = `${correct ? '\u2705' : '\u274C'} ${text}`;\n}\n\nfunction resetProductDisplay(): void {\n  productDisplay.textContent = '';\n}\n\nfunction updateModePresentation(mode: Mode): void {\n  modeButtons.forEach((button) => {\n    button.classList.toggle('active', button.dataset.modeTarget === mode);\n  });\n\n  switch (mode) {\n    case Mode.Addition:\n      heading.textContent = 'Addition Trainer';\n      hint.textContent = 'Answer the question, then watch the tens and ones hops bring the sum to life.';\n      break;\n    case Mode.Subtraction:\n      heading.textContent = 'Subtraction Trainer';\n      hint.textContent = 'Work backwards with tens and ones hops to see the difference unfold.';\n      break;\n    default:\n      heading.textContent = 'Times Table Explorer';\n      hint.textContent = 'Select a number to watch its multiples up to 150. Adjust the hop speed to suit your pace.';\n  }\n}\n\nfunction updateProductDisplay(base: number, multiplier: number, product: number): void {\n  productDisplay.textContent = `${base} x ${multiplier} = ${product}`;\n}\n\nfunction initialiseSelect(): void {\n  // Ensure options run from 1 up to MAX_TABLE; skip duplicates that might exist already.\n  const existing = new Set<string>();\n  Array.from(select.options).forEach((option) => {\n    existing.add(option.value);\n  });\n\n  for (let value = 1; value <= MAX_TABLE; value += 1) {\n    if (!existing.has(String(value))) {\n      const option = document.createElement('option');\n      option.value = String(value);\n      option.textContent = String(value);\n      select.append(option);\n    }\n  }\n}\n\nfunction buildBoard(): void {\n  board.innerHTML = ''; // clear any previous render\n  cellsByValue.clear();\n  clearVisited();\n  board.style.setProperty('--grid-columns', String(GRID_COLUMNS));\n  board.style.setProperty('--grid-rows', String(GRID_ROWS));\n  const fragment = document.createDocumentFragment();\n\n  for (let value = 1; value <= GRID_LIMIT; value += 1) {\n    const cell = document.createElement('div');\n    cell.className = 'cell';\n    cell.dataset.value = String(value);\n    cell.textContent = String(value);\n    fragment.append(cell);\n    cellsByValue.set(value, cell);\n  }\n\n  board.append(fragment);\n  if (pathOverlay) {\n    board.append(pathOverlay);\n  }\n  board.append(ball);\n}\n\nfunction updateSpeedLabel(): void {\n  const durationMs = Number(speedSlider.value);\n  const seconds = (durationMs / 1000).toFixed(1);\n  speedLabel.textContent = `${seconds}s`;\n}\n\nfunction currentHopDuration(): number {\n  return Number(speedSlider.value);\n}\n\nfunction updateVolumeLabel(): void {\n  const percent = Math.round(currentVolume() * 100);\n  volumeLabel.textContent = `${percent}%`;\n  applyVolume();\n}\n\nfunction setRunningState(running: boolean): void {\n  startButton.disabled = running;\n  stopButton.disabled = !running;\n}\n\nfunction setActiveCell(cell: HTMLElement | null): void {\n  if (activeCell && activeCell !== cell) {\n    activeCell.classList.remove('active');\n  }\n\n  if (!cell) {\n    activeCell = null;\n    if (currentMode === Mode.TimesTable) {\n      resetProductDisplay();\n    }\n    return;\n  }\n\n  activeCell = cell;\n  activeCell.classList.add('visited');\n  activeCell.classList.add('active');\n  visitedCells.add(activeCell);\n}\n\nfunction renderHopPath(previous: HTMLElement | null, current: HTMLElement, deltaLabel: string): void {\n  if (!pathOverlay || !previous) {\n    return;\n  }\n\n  const boardRect = board.getBoundingClientRect();\n  const prevRect = previous.getBoundingClientRect();\n  const currRect = current.getBoundingClientRect();\n\n  const startX = prevRect.left - boardRect.left + prevRect.width / 2;\n  const startY = prevRect.top - boardRect.top + prevRect.height / 2;\n  const endX = currRect.left - boardRect.left + currRect.width / 2;\n  const endY = currRect.top - boardRect.top + currRect.height / 2;\n\n  const controlX = (startX + endX) / 2;\n  const verticalOffset = Math.max(30, Math.abs(endX - startX) * 0.35);\n  const controlY = Math.min(startY, endY) - verticalOffset;\n\n  lastHopGroup?.classList.remove('current');\n  lastHopGroup?.classList.add('past');\n\n  const width = board.clientWidth;\n  const height = board.clientHeight;\n  pathOverlay.setAttribute('viewBox', `0 0 ${width} ${height}`);\n  pathOverlay.setAttribute('width', String(width));\n  pathOverlay.setAttribute('height', String(height));\n\n  const group = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n  group.classList.add('hop-path', 'current');\n\n  const path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n  path.setAttribute('class', 'path-curve');\n  path.setAttribute('d', `M ${startX} ${startY} Q ${controlX} ${controlY} ${endX} ${endY}`);\n\n  const text = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n  text.setAttribute('class', 'path-label');\n  text.setAttribute('x', String(controlX));\n  text.setAttribute('y', String(controlY - 6));\n  text.textContent = deltaLabel;\n\n  group.append(path, text);\n  pathOverlay.append(group);\n  lastHopGroup = group;\n\n  const pastGroups = Array.from(pathOverlay.querySelectorAll('.hop-path.past'));\n  if (pastGroups.length > 3) {\n    pastGroups.slice(0, pastGroups.length - 3).forEach((past) => past.remove());\n  }\n}\n\nfunction positionBall(cell: HTMLElement | null, animate = true): void {\n  if (!cell) {\n    ball.classList.remove('visible');\n    return;\n  }\n\n  const duration = animate ? currentHopDuration() : 0;\n  ball.style.setProperty('--hop-duration', `${duration}ms`);\n\n  const width = cell.offsetWidth;\n  const height = cell.offsetHeight;\n  ball.style.width = `${width}px`;\n  ball.style.height = `${height}px`;\n\n  const targetX = cell.offsetLeft;\n  const targetY = cell.offsetTop;\n  ball.classList.add('visible');\n  ball.style.transform = `translate3d(${targetX}px, ${targetY}px, 0)`;\n\n  if (!animate) {\n    // Allow transition duration to reset on the next frame.\n    requestAnimationFrame(() => {\n      ball.style.setProperty('--hop-duration', `${currentHopDuration()}ms`);\n    });\n  }\n}\n\nfunction speakText(text: string, rate = 0.95): void {\n  if (!('speechSynthesis' in window)) {\n    return;\n  }\n\n  const utterance = new SpeechSynthesisUtterance(text);\n  utterance.lang = 'en-US';\n  utterance.rate = rate;\n  utterance.pitch = 1.05;\n  utterance.volume = Math.max(0, Math.min(1, currentVolume()));\n\n  window.speechSynthesis.cancel();\n  window.speechSynthesis.speak(utterance);\n}\n\nfunction speak(base: number, multiplier: number, product: number): void {\n  const quickHop = currentHopDuration() < 1500;\n  const message = quickHop ? `${product}` : `${base} times ${multiplier} is ${product}`;\n  speakText(message, quickHop ? 1.05 : 0.95);\n}\n\nfunction buildSteps(base: number): TableStep[] {\n  const steps: TableStep[] = [];\n  for (let multiplier = 1; multiplier <= 12; multiplier += 1) {\n    const product = base * multiplier;\n    if (product > GRID_LIMIT) {\n      break;\n    }\n    steps.push({ multiplier, product });\n  }\n  return steps;\n}\n\nfunction buildArithmeticPath(question: ArithmeticQuestion): number[] {\n  const path: number[] = [];\n  let current = question.a;\n  path.push(current);\n\n  const tensSteps = Math.floor(question.b / 10);\n  const onesSteps = question.b % 10;\n\n  const stepSign = question.mode === Mode.Addition ? 1 : -1;\n\n  for (let i = 0; i < tensSteps; i += 1) {\n    current += stepSign * 10;\n    path.push(current);\n  }\n\n  for (let i = 0; i < onesSteps; i += 1) {\n    current += stepSign;\n    path.push(current);\n  }\n\n  if (path[path.length - 1] !== question.answer) {\n    path.push(question.answer);\n  }\n\n  return path;\n}\n\nfunction formatDeltaLabel(delta: number): string {\n  if (delta > 0) {\n    return `+${delta}`;\n  }\n  if (delta < 0) {\n    return `${delta}`;\n  }\n  return '0';\n}\n\nfunction formatCumulativeLabel(question: ArithmeticQuestion, currentValue: number): string {\n  const delta = currentValue - question.a;\n  if (question.mode === Mode.Subtraction) {\n    return delta === 0 ? '0' : `${delta}`;\n  }\n  return delta >= 0 ? `+${delta}` : `${delta}`;\n}\n\nfunction wait(ms: number): Promise<void> {\n  return new Promise((resolve) => {\n    window.setTimeout(resolve, ms);\n  });\n}\n\nasync function playArithmetic(question: ArithmeticQuestion, token: number): Promise<void> {\n  const path = buildArithmeticPath(question);\n  clearVisited(false);\n  positionBall(null);\n  await wait(150);\n\n  let previousValue: number | null = null;\n  let previousCell: HTMLElement | null = null;\n  for (const value of path) {\n    if (token !== runToken) {\n      return;\n    }\n\n    const cell = cellsByValue.get(value) ?? null;\n    if (!cell) {\n      continue;\n    }\n\n    previousCell = activeCell;\n    setActiveCell(cell);\n    positionBall(cell);\n\n    if (previousCell && previousValue !== null) {\n      const label = formatCumulativeLabel(question, value);\n      renderHopPath(previousCell, cell, label);\n    }\n    previousValue = value;\n\n    await wait(currentHopDuration() + EXTRA_HOLD);\n  }\n\n  if (token === runToken && currentMode !== Mode.TimesTable) {\n    stopMusic();\n  }\n}\n\nfunction cleanup(aborted: boolean): void {\n  setRunningState(false);\n  stopMusic();\n  setActiveCell(null);\n  clearHopPaths();\n  if (aborted) {\n    ball.classList.remove('visible');\n    window.speechSynthesis?.cancel?.();\n  }\n}\n\nasync function playTable(base: number, token: number): Promise<void> {\n  const steps = buildSteps(base);\n  setActiveCell(null);\n  positionBall(null);\n  await wait(150); // brief pause before starting\n\n  let previousValue: number | null = null;\n  for (const step of steps) {\n    if (token !== runToken) {\n      return;\n    }\n\n    const cell = cellsByValue.get(step.product) ?? null;\n    if (!cell) {\n      continue;\n    }\n\n    const previousCell = activeCell;\n    setActiveCell(cell);\n    updateProductDisplay(base, step.multiplier, step.product);\n    positionBall(cell);\n    speak(base, step.multiplier, step.product);\n\n    if (previousCell && previousValue !== null) {\n      const delta = step.product - previousValue;\n      renderHopPath(previousCell, cell, formatDeltaLabel(delta));\n    }\n    previousValue = step.product;\n\n    const dwell = currentHopDuration() + EXTRA_HOLD;\n    await wait(dwell);\n  }\n\n  if (token === runToken) {\n    cleanup(false);\n  }\n}\n\nfunction prepareArithmeticQuestion(): void {\n  if (currentMode === Mode.TimesTable) {\n    currentQuestion = null;\n    return;\n  }\n  const mode = currentMode as Mode.Addition | Mode.Subtraction;\n  currentQuestion = generateArithmeticQuestion(mode);\n  clearVisited(false);\n  positionBall(null);\n  updateQuestionDisplay(currentQuestion);\n  answerInput.value = '';\n  speakText(\n    `${currentQuestion.a} ${currentQuestion.mode === Mode.Addition ? 'plus' : 'minus'} ${currentQuestion.b}. What is the answer?`,\n    0.95\n  );\n}\n\nfunction setMode(mode: Mode): void {\n  if (currentMode === mode) {\n    return;\n  }\n\n  runToken += 1;\n  stopMusic();\n  window.speechSynthesis?.cancel?.();\n  setRunningState(false);\n\n  currentMode = mode;\n  document.body.dataset.mode = mode;\n  updateModePresentation(mode);\n\n  clearVisited();\n  positionBall(null);\n\n  const arithmeticActive = mode !== Mode.TimesTable;\n  answerInput.disabled = !arithmeticActive;\n  checkButton.disabled = !arithmeticActive;\n  nextQuestionButton.disabled = !arithmeticActive;\n\n  if (arithmeticActive) {\n    prepareArithmeticQuestion();\n    answerInput.focus();\n  } else {\n    currentQuestion = null;\n    resetProductDisplay();\n    answerInput.value = '';\n  }\n}\n\nfunction handleNewQuestion(): void {\n  if (currentMode === Mode.TimesTable) {\n    return;\n  }\n  stopMusic();\n  prepareArithmeticQuestion();\n  answerInput.focus();\n}\n\nfunction handleCheck(): void {\n  if (currentMode === Mode.TimesTable || !currentQuestion) {\n    return;\n  }\n\n  const raw = answerInput.value.trim();\n  if (!raw) {\n    productDisplay.textContent = 'Enter an answer to check';\n    return;\n  }\n\n  const attempted = Number(raw);\n  if (!Number.isFinite(attempted)) {\n    productDisplay.textContent = 'Please enter a number';\n    return;\n  }\n\n  const correct = attempted === currentQuestion.answer;\n  displayCheckResult(currentQuestion, correct);\n\n  const phrase = `${currentQuestion.a} ${currentQuestion.mode === Mode.Addition ? 'plus' : 'minus'} ${currentQuestion.b} equals ${currentQuestion.answer}`;\n  speakText(phrase, correct ? 0.95 : 0.9);\n\n  runToken += 1;\n  const token = runToken;\n  void startMusic();\n  void playArithmetic(currentQuestion, token);\n\n  window.setTimeout(() => {\n    answerInput.focus();\n  }, 10);\n}\n\nfunction handleStart(): void {\n  if (currentMode !== Mode.TimesTable) {\n    return;\n  }\n  const selected = Number(select.value);\n  if (!Number.isFinite(selected) || selected < 1) {\n    return;\n  }\n\n  clearVisited();\n  positionBall(null);\n  getPaletteFor(selected);\n  void startMusic();\n\n  runToken += 1;\n  const token = runToken;\n\n  setRunningState(true);\n  window.speechSynthesis?.cancel?.();\n\n  void playTable(selected, token).catch((error) => {\n    console.error(error);\n    cleanup(true);\n  });\n}\n\nfunction handleStop(): void {\n  runToken += 1;\n  cleanup(true);\n}\n\nfunction handleSliderInput(): void {\n  updateSpeedLabel();\n  if (activeCell) {\n    positionBall(activeCell, false);\n  }\n}\n\nfunction handleVolumeInput(): void {\n  updateVolumeLabel();\n}\n\nfunction handleResize(): void {\n  clearHopPaths();\n  if (activeCell) {\n    positionBall(activeCell, false);\n  }\n}\n\nfunction init(): void {\n  document.body.dataset.mode = currentMode;\n  updateModePresentation(currentMode);\n  answerInput.disabled = true;\n  checkButton.disabled = true;\n  nextQuestionButton.disabled = true;\n\n  initialiseSelect();\n  buildBoard();\n  updateSpeedLabel();\n  updateVolumeLabel();\n  setRunningState(false);\n\n  modeButtons.forEach((button) => {\n    button.addEventListener('click', () => {\n      const targetMode = button.dataset.modeTarget as Mode;\n      setMode(targetMode);\n    });\n  });\n  startButton.addEventListener('click', handleStart);\n  stopButton.addEventListener('click', handleStop);\n  speedSlider.addEventListener('input', handleSliderInput);\n  volumeSlider.addEventListener('input', handleVolumeInput);\n  window.addEventListener('resize', handleResize);\n  checkButton.addEventListener('click', handleCheck);\n  nextQuestionButton.addEventListener('click', handleNewQuestion);\n  answerInput.addEventListener('keydown', (event) => {\n    if (event.key === 'Enter') {\n      event.preventDefault();\n      handleCheck();\n    }\n  });\n\n  sidebarToggle.addEventListener('click', () => {\n    const collapsed = sidebar.classList.toggle('collapsed');\n    sidebarToggle.setAttribute('aria-expanded', (!collapsed).toString());\n  });\n\n  const prefersCompact = window.matchMedia('(max-width: 640px)');\n  const syncSidebar = (): void => {\n    if (prefersCompact.matches) {\n      sidebar.classList.add('collapsed');\n      sidebarToggle.setAttribute('aria-expanded', 'false');\n    }\n  };\n  syncSidebar();\n  if (typeof prefersCompact.addEventListener === 'function') {\n    prefersCompact.addEventListener('change', syncSidebar);\n  } else if (typeof prefersCompact.addListener === 'function') {\n    prefersCompact.addListener(syncSidebar);\n  }\n}\n\ninit();\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', () => {\n    navigator.serviceWorker\n      .register('./sw.js')\n      .catch((error) => console.error('Service worker registration failed:', error));\n  });\n}\n"],
  "mappings": "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",
  "names": ["GRID_COLUMNS", "MAX_TABLE", "EXTRA_HOLD", "DEFAULT_VOLUME_PERCENT", "runToken", "activeCell", "currentMode", "currentQuestion", "board", "ball", "select", "startButton", "stopButton", "speedSlider", "speedLabel", "productDisplay", "volumeSlider", "volumeLabel", "backgroundAudio", "answerInput", "checkButton", "nextQuestionButton", "sidebar", "sidebarToggle", "modeButtons", "heading", "hint", "pathOverlay", "cellsByValue", "visitedCells", "paletteByTable", "resumeAudioHandler", "lastHopGroup", "clearHopPaths", "clearVisited", "resetDisplay", "cell", "resetProductDisplay", "createPalette", "hue", "applyPalette", "palette", "getPaletteFor", "base", "_a", "stopMusic", "startMusic", "applyVolume", "error", "scheduleAudioResume", "attempt", "err", "level", "currentVolume", "shaped", "musicVolume", "value", "DEFAULT_VOLUME_PERCENT", "randomInt", "min", "max", "generateArithmeticQuestion", "mode", "a", "b", "answer", "updateQuestionDisplay", "question", "displayCheckResult", "correct", "text", "updateModePresentation", "button", "updateProductDisplay", "multiplier", "product", "initialiseSelect", "existing", "option", "MAX_TABLE", "buildBoard", "GRID_COLUMNS", "fragment", "updateSpeedLabel", "seconds", "currentHopDuration", "updateVolumeLabel", "percent", "setRunningState", "running", "setActiveCell", "renderHopPath", "previous", "current", "deltaLabel", "boardRect", "prevRect", "currRect", "startX", "startY", "endX", "endY", "controlX", "verticalOffset", "controlY", "width", "height", "group", "path", "pastGroups", "past", "positionBall", "animate", "duration", "targetX", "targetY", "speakText", "rate", "utterance", "speak", "quickHop", "message", "buildSteps", "steps", "buildArithmeticPath", "tensSteps", "onesSteps", "stepSign", "i", "formatDeltaLabel", "delta", "formatCumulativeLabel", "currentValue", "wait", "ms", "resolve", "playArithmetic", "token", "previousValue", "previousCell", "label", "EXTRA_HOLD", "cleanup", "aborted", "_b", "playTable", "step", "dwell", "prepareArithmeticQuestion", "setMode", "arithmeticActive", "handleNewQuestion", "handleCheck", "raw", "attempted", "phrase", "handleStart", "selected", "handleStop", "handleSliderInput", "handleVolumeInput", "handleResize", "init", "targetMode", "event", "collapsed", "prefersCompact", "syncSidebar"]
}
